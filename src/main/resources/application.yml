server:
    address: ${SERVER_ADDRESS:localhost}
    port: ${SERVER_PORT:8080}
spring:
    datasource:
        url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/codeodyssey-api}
        username: ${DATASOURCE_USERNAME:postgres}
        password: ${DATASOURCE_PASSWORD:postgres}
    mail:
        host: ${MAIL_HOST:smtp.gmail.com}
        port: ${MAIL_PORT:587}
        test-connection: false
        username: ${MAIL_USERNAME}
        password: ${MAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true
                        required: true
                    ssl:
                        enabled: true
    jpa:
        open-in-view: false
    rabbitmq:
        host: ${RABBITMQ_HOST:localhost}
        port: ${RABBITMQ_PORT:5672}
        username: ${RABBITMQ_USERNAME:guest}
        password: ${RABBITMQ_PASSWORD:guest}
application:
    jwt:
        issuer: code-odyssey
        secret-key: ${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
        access-token-exp: ${ACCESS_TOKEN_EXPIRATION_AFTER_MINUTES:15}
        refresh-token-exp: ${REFRESH_TOKEN_EXPIRATION_AFTER_MINUTES:1440}
frontend:
    url: ${FRONTEND_URL:http://127.0.0.1:5173,http://localhost:5173}

time:
    register-expiration-time: 900

scheduler:
    registration:
        interval: ${SCHEDULER_REGISTRATION_INTERVAL:60000}
    invitation:
        interval: ${SCHEDULER_INVITATION_INTERVAL:60000}

rabbitmq:
    producer:
        queue:
            name: execution_queue
        exchange:
            name: api_exchange
        routing-key: ${API_EXCHANGE_KEY:my_first_key}
    consumer:
        queue:
            name: result_queue
        exchange:
            name: executor_exchange
        routing-key: ${EXECUTOR_EXCHANGE_KEY:my_second_key}